<project name="Empire" default="dist">
	<description>Empire is an implementation of the JPA API backed by standard Semantic Web technologies.</description>

	<!-- Read user properties -->
	<property file="build.properties"/>
	<property file="${user.home}/build.properties"/>

	<!-- Enviroment -->
	<property environment="env"/>

	<property name="project.name" value="empire"/>
	<property name="project.version" value="0.7"/>

	<property name="core.dir" location="core"/>
	<property name="jena.dir" location="jena"/>
	<property name="fourstore.dir" location="fourstore"/>
	<property name="icu4j.dir" location="icu4j"/>
	<property name="sesame.dir" location="sesame2"/>
	<property name="test.dir" location="test"/>

	<property name="core.src.dir" location="${core.dir}/src"/>
	<property name="jena.src.dir" location="${jena.dir}/src"/>
	<property name="fourstore.src.dir" location="${fourstore.dir}/src"/>
	<property name="sesame.src.dir" location="${sesame.dir}/src"/>
	<property name="test.src.dir" location="${test.dir}/src"/>

	<property name="core.lib.dir" location="${core.dir}/lib"/>
	<property name="jena.lib.dir" location="${jena.dir}/lib"/>
	<property name="fourstore.lib.dir" location="${fourstore.dir}/lib"/>
	<property name="icu4j.lib.dir" location="${icu4j.dir}/lib"/>
	<property name="test.lib.dir" location="${jena.dir}/lib"/>

	<property name="build.dir" location="build"/>
	<property name="core.build.dir" location="${build.dir}/core"/>
	<property name="jena.build.dir" location="${build.dir}/jena"/>
	<property name="fourstore.build.dir" location="${build.dir}/fourstore"/>
	<property name="sesame.build.dir" location="${build.dir}/sesame"/>
	<property name="test.build.dir" location="${build.dir}/test"/>

	<property name="dist.dir" location="dist"/>
	<property name="dist.src.dir" location="${dist.dir}/src"/>
	<property name="dist.docs.dir" location="${dist.dir}/docs"/>
	<property name="dist.lib.dir" location="${dist.dir}/lib"/>
	<property name="dist.javadoc.dir" location="${dist.docs.dir}/javadoc"/>

	<property name="javac.debug" value="off"/>

	<path id="project.class.path">
		<pathelement location="${core.build.dir}"/>
		<pathelement location="${jena.build.dir}"/>
		<pathelement location="${fourstore.build.dir}"/>
		<pathelement location="${sesame.build.dir}"/>
		<pathelement location="${test.build.dir}"/>

		<fileset dir="${core.lib.dir}">
			<include name="**/*.jar"/>
			<exclude name="**/${project.name}*.jar"/>
		</fileset>

		<fileset dir="${jena.lib.dir}">
			<include name="**/*.jar"/>
			<exclude name="**/${project.name}*.jar"/>
		</fileset>

		<fileset dir="${fourstore.lib.dir}">
			<include name="**/*.jar"/>
			<exclude name="**/${project.name}*.jar"/>
		</fileset>
        
        <fileset dir="${icu4j.lib.dir}">
			<include name="**/*.jar"/>
			<exclude name="**/${project.name}*.jar"/>
		</fileset>


		<fileset dir="${test.lib.dir}">
			<include name="**/*.jar"/>
			<exclude name="**/${project.name}*.jar"/>
		</fileset>
	</path>

	<target name="init">
		<pathconvert targetos="unix" property="classpath" refid="project.class.path"/>
		
		<tstamp/>

		<mkdir dir="${build.dir}"/>
		<mkdir dir="${core.build.dir}"/>

		<mkdir dir="${dist.dir}"/>

		<mkdir dir="${dist.lib.dir}"/>
		<mkdir dir="${dist.docs.dir}"/>
	</target>

	<target name="compile" depends="init, compile-core, compile-sesame, compile-fourstore, compile-jena, compile-test" description="Compile source files">
	</target>

	<target name="compile-core" depends="init">
		<javac debug="${javac.debug}" source="1.5" target="1.5" destdir="${core.build.dir}">
			<src path="${core.src.dir}"/>
			<classpath refid="project.class.path"/>
		</javac>
	</target>

	<target name="compile-jena" depends="init, compile-core">
		<mkdir dir="${jena.build.dir}"/>

		<javac debug="${javac.debug}" source="1.5" target="1.5" destdir="${jena.build.dir}">
			<src path="${jena.src.dir}"/>
			<classpath refid="project.class.path"/>
		</javac>
	</target>

	<target name="compile-fourstore" depends="init, compile-core">
		<mkdir dir="${fourstore.build.dir}"/>

		<javac debug="${javac.debug}" source="1.5" target="1.5" destdir="${fourstore.build.dir}">
			<src path="${fourstore.src.dir}"/>
			<classpath refid="project.class.path"/>
		</javac>
	</target>

	<target name="compile-sesame" depends="init, compile-core">
		<mkdir dir="${sesame.build.dir}"/>

		<javac debug="${javac.debug}" source="1.5" target="1.5" destdir="${sesame.build.dir}">
			<src path="${sesame.src.dir}"/>
			<classpath refid="project.class.path"/>
		</javac>
	</target>

	<target name="compile-test" depends="init, compile-core">
		<mkdir dir="${test.build.dir}"/>

		<apt debug="${javac.debug}" source="1.5" target="1.5" factory="com.clarkparsia.empire.util.apt.EmpireAnnotationProcessorFactory" destdir="${test.build.dir}">
			<src path="${test.src.dir}"/>
			<classpath refid="project.class.path"/>
		</apt>
	</target>

	<target name="build" depends="compile">
	</target>

	<target name="dist" depends="build" description="Build a complete distribution">
		<mkdir dir="${dist.src.dir}"/>

		<jar jarfile="${dist.src.dir}/${project.name}-core-src.jar" basedir="${core.src.dir}"/>
		<jar jarfile="${dist.src.dir}/${project.name}-jena-src.jar" basedir="${jena.src.dir}"/>
		<jar jarfile="${dist.src.dir}/${project.name}-sesame-src.jar" basedir="${sesame.src.dir}"/>
		<jar jarfile="${dist.src.dir}/${project.name}-fourstore-src.jar" basedir="${fourstore.src.dir}"/>
		<jar jarfile="${dist.src.dir}/${project.name}-test-src.jar" basedir="${test.src.dir}"/>

		<copy todir="${core.build.dir}">
			<fileset dir="${core.dir}/resources">
				<include name="**/*"/>
			</fileset>
			<fileset dir="${core.dir}/src">
				<include name="**/*"/>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>

		<jar jarfile="${dist.lib.dir}/${project.name}-core.jar" basedir="${core.build.dir}"/>
		<jar jarfile="${dist.lib.dir}/${project.name}-jena.jar" basedir="${jena.build.dir}"/>
		<jar jarfile="${dist.lib.dir}/${project.name}-sesame.jar" basedir="${sesame.build.dir}"/>
		<jar jarfile="${dist.lib.dir}/${project.name}-fourstore.jar" basedir="${fourstore.build.dir}"/>
		<jar jarfile="${dist.lib.dir}/${project.name}-test.jar" basedir="${test.build.dir}"/>

		<copy todir="${dist.lib.dir}">
			<fileset dir="${core.lib.dir}">
				<include name="**/*.jar"/>
				<include name="**/*.txt"/>
			</fileset>

			<fileset dir="${jena.lib.dir}">
				<include name="**/*.jar"/>
				<include name="**/*.txt"/>
			</fileset>

			<fileset dir="${fourstore.lib.dir}">
				<include name="**/*.jar"/>
				<include name="**/*.txt"/>
			</fileset>

			<fileset dir="${icu4j.lib.dir}">
				<include name="**/*.jar"/>
				<include name="**/*.txt"/>
			</fileset>


			<fileset dir="${test.lib.dir}">
				<include name="**/*.jar"/>
				<include name="**/*.txt"/>
			</fileset>
		</copy>
	</target>

	<target name="distfiles">
		<copy todir="${dist.dir}">
			<fileset dir="">
			    <include name="CHANGES.txt"/>
				<include name="COPYING"/>
				<include name="README"/>
				<include name="docs/**/*.txt"/>
				<include name="docs/**/*.html"/>
			</fileset>
		</copy>
	</target>

	<target name="make-zip" depends="label-release"
			description="Build a zip file out of the contents of the current distribution">
		<condition property="project.dirname" value="${project.name}-${DSTAMP}">
			<not>
				<isset property="project.dirname"/>
			</not>
		</condition>

		<zip destfile="${dist.dir}/${project.dirname}.zip">
			<zipfileset dir="dist" prefix="${project.dirname}"
						excludes="${project.name}*.zip, dist/test-reports"/>
		</zip>
	</target>

	<target name="label-date" depends="init">
		<property name="project.version.label" value="${DSTAMP}"/>
		<property name="project.label" value="${project.name}-${DSTAMP}"/>
		<property name="project.dirname"
				  value="${project.name}-${DSTAMP}"/>
	</target>

	<target name="label-release" depends="init">
		<property name="project.version.label" value="${project.version}"/>
		<property name="project.label" value="${project.name}-${project.version}"/>
		<property name="project.dirname"
				  value="${project.name}-${project.version.label}"/>
	</target>

	<target name="javadoc" depends="build">
		<mkdir dir="${dist.javadoc.dir}"/>

		<javadoc destdir="${dist.javadoc.dir}" access="public" use="true" notree="false"
			nonavbar="false" noindex="false" splitindex="true" author="true"
			version="true" nodeprecatedlist="false" nodeprecated="false"
			packagenames="com.clarkparsia.*"
			doctitle="${project.name}-${project.version.label}"
			bottom="Copyright (c) 2009-2010 Clark &amp; Parsia, LLC (http://clarkparsia.com). All Rights Reserved.">
			<classpath refid="project.class.path"/>
			<fileset dir="${core.src.dir}" defaultexcludes="yes">
				<include name="**/*.java"/>
			</fileset>
			<fileset dir="${jena.src.dir}" defaultexcludes="yes">
				<include name="**/*.java"/>
			</fileset>
			<fileset dir="${sesame.src.dir}" defaultexcludes="yes">
				<include name="**/*.java"/>
			</fileset>
			<fileset dir="${fourstore.src.dir}" defaultexcludes="yes">
				<include name="**/*.java"/>
			</fileset>
		</javadoc>
	</target>

	<!--
	******************** RELEASE ********************
	-->

	<target name="release" depends="label-release,dist,distfiles,javadoc" description="Create a complete, versioned, release distribution">
		<antcall target="make-zip"/>
	</target>

	<target name="dist-core" depends="label-release,build,distfiles,javadoc">

		<copy todir="${core.build.dir}">
			<fileset dir="${core.dir}/resources">
				<include name="**/*"/>
			</fileset>
		</copy>

		<jar jarfile="${dist.lib.dir}/${project.name}-core.jar" basedir="${core.build.dir}"/>

		<copy todir="${dist.lib.dir}">
			<fileset dir="${core.lib.dir}">
				<include name="**/*.jar"/>
				<include name="**/*.txt"/>
			</fileset>
		</copy>
	</target>

	<target name="dist-fourstore" depends="dist-core"
			description="Create the dist for using Empire with 4Store">

		<jar jarfile="${dist.lib.dir}/${project.name}-fourstore.jar" basedir="${fourstore.build.dir}"/>

		<copy todir="${dist.lib.dir}">

			<fileset dir="${fourstore.lib.dir}">
				<include name="**/*.jar"/>
				<include name="**/*.txt"/>
			</fileset>
		</copy>
	</target>

	<target name="dist-jena" depends="dist-core"
			description="Create the dist for using Empire with Jena 2.6.x">

		<jar jarfile="${dist.lib.dir}/${project.name}-jena.jar" basedir="${jena.build.dir}"/>

		<copy todir="${dist.lib.dir}">

			<fileset dir="${jena.lib.dir}">
				<include name="**/*.jar"/>
				<include name="**/*.txt"/>
			</fileset>
		</copy>
	</target>

	<target name="dist-sesame" depends="dist-core"
			description="Create the dist for using Empire with Sesame 2.3.x">
		<jar jarfile="${dist.lib.dir}/${project.name}-sesame.jar" basedir="${sesame.build.dir}"/>
	</target>

	<!--
	********************* TEST **********************
	-->

	<target name="test" depends="dist">
		<mkdir dir="dist/test-reports"/>
  		<junit fork="yes" printsummary="yes" haltonfailure="no">
            <jvmarg value="-Xmx1024m"/>
			<jvmarg value="-Dtest.data=${test.dir}/data/nasa.nt"/>
              
            <test name="com.clarkparsia.empire.test.EmpireTestSuite" outfile="dist/test-reports/report"/>
              
    		<formatter type="xml" />

    		<classpath refid="project.class.path"/>
  		</junit>
  
		<junitreport todir="dist/test-reports">
    		<fileset dir="dist/test-reports">
      			<include name="TEST-*.xml" />
      			<include name="report.xml" />
    		</fileset>
    		<report todir="dist/test-reports" />
  		</junitreport>
	</target>

	<!--
	******************** CLEAN ********************
	-->

	<target name="clean" description="Clean up build files">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
	</target>
</project>
